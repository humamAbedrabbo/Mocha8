@model IEnumerable<AMS.Models.Ticket>

@{
    ViewData["Title"] = "My Tickets";
    AmsUser user = ViewData["Me"] as AmsUser;
}

@* view-styles *@
@section Styles {
}

@*view-breadcrumbs*@
@section Breadcrumbs {
}

@* view-content *@
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <i class="fa fa-align-justify"></i> My Tickets (@Model.Count())
            </div>
            <div class="card-body">
                <form asp-action="Tickets">
                    <div class="form-inline">
                        <div class="form-group mr-1">
                            <input name="code" placeholder="Ticket Code" class="form-control" />
                        </div>
                        <div class="form-group mr-1">
                            <select name="tstatus" asp-items="@Html.GetEnumSelectList<StatusFilter>()" placeholder="Ticket Status" class="form-control">
                                <option>Ticket Status</option>
                            </select>
                        </div>
                        <button class="btn btn-success mr-1" type="submit">Search</button>
                        <a asp-controller="Tickets" asp-action="Create" class="btn btn-primary">
                            Add Ticket
                        </a>
                    </div>
                </form>

                <table id="table"
                       data-search="true"
                       data-pagination="true"
                       data-show-export="true"
                       data-filter-control="true"
                       data-show-columns="true"
                       data-show-search-clear-button="true"
                       class="table">
                    <thead>
                        <tr>
                            <th data-field="code" data-switchable="false" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.Code)
                            </th>

                            <th data-field="status" data-switchable="false" data-sortable="true" data-filter-control="select">
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
                            <th data-field="delay" data-visible="false" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.Delay)
                            </th>
                            <th data-field="active" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.TotalActiveTasks)
                            </th>
                            <th data-field="open" data-visible="false" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.TotalOpenTasks)
                            </th>
                            <th data-field="pending" data-visible="false" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.TotalPendingTasks)
                            </th>
                            <th data-field="overdue" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.TotalOverdueTasks)
                            </th>
                            <th data-field="completed" data-visible="false" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.TotalCompletedTasks)
                            </th>


                            <th data-field="dueDate" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.DueDate)
                            </th>

                            <th data-field="client" data-visible="false" data-sortable="true" data-filter-control="select">
                                @Html.DisplayNameFor(model => model.ClientId)
                            </th>

                            <th data-field="ticketType" data-visible="false" data-sortable="true" data-filter-control="select">
                                @Html.DisplayNameFor(model => model.TicketTypeId)
                            </th>

                            <th data-field="location" data-visible="false" data-sortable="true" data-filter-control="select">
                                @Html.DisplayNameFor(model => model.LocationId)
                            </th>

                            <th data-field="summary" data-sortable="true" data-filter-control="input">
                                @Html.DisplayNameFor(model => model.Summary)
                            </th>

                            <th data-field="assignment" data-sortable="true" data-filter-control="input">
                                Assignment
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                        <tr>
                            <td>
                                <a asp-controller="Tickets" asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Code)</a>
                            </td>
                            <td class="@item.GetStatusColor()">
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Delay)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.TotalActiveTasks)
                            </td>

                            <td class="text-primary">
                                @Html.DisplayFor(modelItem => item.TotalOpenTasks)
                            </td>

                            <td class="text-secondary">
                                @Html.DisplayFor(modelItem => item.TotalPendingTasks)
                            </td>

                            <td class="text-danger">
                                @Html.DisplayFor(modelItem => item.TotalOverdueTasks)
                            </td>

                            <td class="text-success">
                                @Html.DisplayFor(modelItem => item.TotalCompletedTasks)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.DueDate)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Client.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TicketType.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Location.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Summary)
                            </td>


                            @if (item.Assignments.Any(x => x.UserId == user?.Id))
                            {
                                <td>Assigned To Me</td>
                            }
                            else
                            {
                                <td>
                                    <ul class="list-unstyled list-inline">
                                        @foreach (var a in item.Assignments)
                                        {
                                            @if (a.UserId.HasValue)
                                            {
                                                <li>@a.User?.DisplayName</li>
                                            }
                                            else
                                            {
                                                <li>@a.UserGroup?.Name</li>
                                            }
                                        }
                                    </ul>
                                </td>
                            }

                        </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
    <!--/.col-->
</div>

@* view-modals *@
@section Modals {
}

@* view-scripts *@
@section Scripts {
    <script>
        $(function () {
            var $table = $("#table").bootstrapTable();


        });

    </script>
}


